lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[i,1] = steps_steps[i,1]+St*cos_sin[i,1]
steps_steps[i,2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Cumulative steps
position = data.frame(x = cumsum(steps_steps[, 1]),
y = cumsum(steps_steps[, 2]))
# Let's make a nice graph...
# Graph parameters
color = "blue4"
xlab = "X-position"
ylab = "Y-position"
pt_pch = 16
pt.cex = 2
main = paste("Simulated 2D RW with", steps, "steps", sep = " ")
hues = seq(15, 375, length = 3)
pt_col = hcl(h = hues, l = 65, c = 100)[1:2]
par(mar = c(5.1, 5.1, 1, 2.1))
# Main plot
plot(NA,  xlim = range(position[,1]),
ylim = range(range(position[,2])),
xlab = xlab, ylab = ylab, xaxt = 'n',
yaxt = 'n', bty = "n", ann = FALSE)
win_dim = par("usr")
par(new = TRUE)
plot(NA, xlim = range(position[,1]), ylim = c(win_dim[3], win_dim[4] + 0.09*(win_dim[4] - win_dim[3])),
xlab = xlab, ylab = ylab, xaxt = 'n', yaxt = 'n', bty = "n")
win_dim = par("usr")
# Add grid
grid(NULL, NULL, lty = 1, col = "grey95")
# Add title
x_vec = c(win_dim[1], win_dim[2], win_dim[2], win_dim[1])
y_vec = c(win_dim[4], win_dim[4],
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]),
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))
polygon(x_vec, y_vec, col = "grey95", border = NA)
text(x = mean(c(win_dim[1], win_dim[2])), y = (win_dim[4] - 0.09/2*(win_dim[4] - win_dim[3])), main)
# Add axes and box
lines(x_vec[1:2], rep((win_dim[4] - 0.09*(win_dim[4] - win_dim[3])),2), col = 1)
box()
axis(1, padj = 0.3)
y_axis = axis(2, labels = FALSE, tick = FALSE)
y_axis = y_axis[y_axis < (win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))]
axis(2, padj = -0.2, at = y_axis)
# Add trajectory
lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[i+1,1] = steps_steps[i,1]+St*cos_sin[i,1]
steps_steps[i+1,2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Cumulative steps
position = data.frame(x = cumsum(steps_steps[, 1]),
y = cumsum(steps_steps[, 2]))
# Let's make a nice graph...
# Graph parameters
color = "blue4"
xlab = "X-position"
ylab = "Y-position"
pt_pch = 16
pt.cex = 2
main = paste("Simulated 2D RW with", steps, "steps", sep = " ")
hues = seq(15, 375, length = 3)
pt_col = hcl(h = hues, l = 65, c = 100)[1:2]
par(mar = c(5.1, 5.1, 1, 2.1))
# Main plot
plot(NA,  xlim = range(position[,1]),
ylim = range(range(position[,2])),
xlab = xlab, ylab = ylab, xaxt = 'n',
yaxt = 'n', bty = "n", ann = FALSE)
win_dim = par("usr")
par(new = TRUE)
plot(NA, xlim = range(position[,1]), ylim = c(win_dim[3], win_dim[4] + 0.09*(win_dim[4] - win_dim[3])),
xlab = xlab, ylab = ylab, xaxt = 'n', yaxt = 'n', bty = "n")
win_dim = par("usr")
# Add grid
grid(NULL, NULL, lty = 1, col = "grey95")
# Add title
x_vec = c(win_dim[1], win_dim[2], win_dim[2], win_dim[1])
y_vec = c(win_dim[4], win_dim[4],
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]),
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))
polygon(x_vec, y_vec, col = "grey95", border = NA)
text(x = mean(c(win_dim[1], win_dim[2])), y = (win_dim[4] - 0.09/2*(win_dim[4] - win_dim[3])), main)
# Add axes and box
lines(x_vec[1:2], rep((win_dim[4] - 0.09*(win_dim[4] - win_dim[3])),2), col = 1)
box()
axis(1, padj = 0.3)
y_axis = axis(2, labels = FALSE, tick = FALSE)
y_axis = y_axis[y_axis < (win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))]
axis(2, padj = -0.2, at = y_axis)
# Add trajectory
lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Cumulative steps
position = data.frame(x = cumsum(steps_steps[, 1]),
y = cumsum(steps_steps[, 2]))
# Let's make a nice graph...
# Graph parameters
color = "blue4"
xlab = "X-position"
ylab = "Y-position"
pt_pch = 16
pt.cex = 2
main = paste("Simulated 2D RW with", steps, "steps", sep = " ")
hues = seq(15, 375, length = 3)
pt_col = hcl(h = hues, l = 65, c = 100)[1:2]
par(mar = c(5.1, 5.1, 1, 2.1))
# Main plot
plot(NA,  xlim = range(position[,1]),
ylim = range(range(position[,2])),
xlab = xlab, ylab = ylab, xaxt = 'n',
yaxt = 'n', bty = "n", ann = FALSE)
win_dim = par("usr")
par(new = TRUE)
plot(NA, xlim = range(position[,1]), ylim = c(win_dim[3], win_dim[4] + 0.09*(win_dim[4] - win_dim[3])),
xlab = xlab, ylab = ylab, xaxt = 'n', yaxt = 'n', bty = "n")
win_dim = par("usr")
# Add grid
grid(NULL, NULL, lty = 1, col = "grey95")
# Add title
x_vec = c(win_dim[1], win_dim[2], win_dim[2], win_dim[1])
y_vec = c(win_dim[4], win_dim[4],
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]),
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))
polygon(x_vec, y_vec, col = "grey95", border = NA)
text(x = mean(c(win_dim[1], win_dim[2])), y = (win_dim[4] - 0.09/2*(win_dim[4] - win_dim[3])), main)
# Add axes and box
lines(x_vec[1:2], rep((win_dim[4] - 0.09*(win_dim[4] - win_dim[3])),2), col = 1)
box()
axis(1, padj = 0.3)
y_axis = axis(2, labels = FALSE, tick = FALSE)
y_axis = y_axis[y_axis < (win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))]
axis(2, padj = -0.2, at = y_axis)
# Add trajectory
lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[(i+1), 1] = steps_steps[i, 1]+St*cos_sin[i, 1]
steps_steps[(i+1), 2] = steps_steps[i, 2]+St*cos_sin[i, 2]
}
# Cumulative steps
position = data.frame(x = cumsum(steps_steps[, 1]),
y = cumsum(steps_steps[, 2]))
# Let's make a nice graph...
# Graph parameters
color = "blue4"
xlab = "X-position"
ylab = "Y-position"
pt_pch = 16
pt.cex = 2
main = paste("Simulated 2D RW with", steps, "steps", sep = " ")
hues = seq(15, 375, length = 3)
pt_col = hcl(h = hues, l = 65, c = 100)[1:2]
par(mar = c(5.1, 5.1, 1, 2.1))
# Main plot
plot(NA,  xlim = range(position[,1]),
ylim = range(range(position[,2])),
xlab = xlab, ylab = ylab, xaxt = 'n',
yaxt = 'n', bty = "n", ann = FALSE)
win_dim = par("usr")
par(new = TRUE)
plot(NA, xlim = range(position[,1]), ylim = c(win_dim[3], win_dim[4] + 0.09*(win_dim[4] - win_dim[3])),
xlab = xlab, ylab = ylab, xaxt = 'n', yaxt = 'n', bty = "n")
win_dim = par("usr")
# Add grid
grid(NULL, NULL, lty = 1, col = "grey95")
# Add title
x_vec = c(win_dim[1], win_dim[2], win_dim[2], win_dim[1])
y_vec = c(win_dim[4], win_dim[4],
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]),
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))
polygon(x_vec, y_vec, col = "grey95", border = NA)
text(x = mean(c(win_dim[1], win_dim[2])), y = (win_dim[4] - 0.09/2*(win_dim[4] - win_dim[3])), main)
# Add axes and box
lines(x_vec[1:2], rep((win_dim[4] - 0.09*(win_dim[4] - win_dim[3])),2), col = 1)
box()
axis(1, padj = 0.3)
y_axis = axis(2, labels = FALSE, tick = FALSE)
y_axis = y_axis[y_axis < (win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))]
axis(2, padj = -0.2, at = y_axis)
# Add trajectory
lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps+1)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Cumulative steps
position = data.frame(x = cumsum(steps_steps[, 1]),
y = cumsum(steps_steps[, 2]))
# Let's make a nice graph...
# Graph parameters
color = "blue4"
xlab = "X-position"
ylab = "Y-position"
pt_pch = 16
pt.cex = 2
main = paste("Simulated 2D RW with", steps, "steps", sep = " ")
hues = seq(15, 375, length = 3)
pt_col = hcl(h = hues, l = 65, c = 100)[1:2]
par(mar = c(5.1, 5.1, 1, 2.1))
# Main plot
plot(NA,  xlim = range(position[,1]),
ylim = range(range(position[,2])),
xlab = xlab, ylab = ylab, xaxt = 'n',
yaxt = 'n', bty = "n", ann = FALSE)
win_dim = par("usr")
par(new = TRUE)
plot(NA, xlim = range(position[,1]), ylim = c(win_dim[3], win_dim[4] + 0.09*(win_dim[4] - win_dim[3])),
xlab = xlab, ylab = ylab, xaxt = 'n', yaxt = 'n', bty = "n")
win_dim = par("usr")
# Add grid
grid(NULL, NULL, lty = 1, col = "grey95")
# Add title
x_vec = c(win_dim[1], win_dim[2], win_dim[2], win_dim[1])
y_vec = c(win_dim[4], win_dim[4],
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]),
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))
polygon(x_vec, y_vec, col = "grey95", border = NA)
text(x = mean(c(win_dim[1], win_dim[2])), y = (win_dim[4] - 0.09/2*(win_dim[4] - win_dim[3])), main)
# Add axes and box
lines(x_vec[1:2], rep((win_dim[4] - 0.09*(win_dim[4] - win_dim[3])),2), col = 1)
box()
axis(1, padj = 0.3)
y_axis = axis(2, labels = FALSE, tick = FALSE)
y_axis = y_axis[y_axis < (win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))]
axis(2, padj = -0.2, at = y_axis)
# Add trajectory
lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
steps_steps
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Cumulative steps
position = data.frame(x = cumsum(steps_steps[, 1]),
y = cumsum(steps_steps[, 2]))
# Let's make a nice graph...
# Graph parameters
color = "blue4"
xlab = "X-position"
ylab = "Y-position"
pt_pch = 16
pt.cex = 2
main = paste("Simulated 2D RW with", steps, "steps", sep = " ")
hues = seq(15, 375, length = 3)
pt_col = hcl(h = hues, l = 65, c = 100)[1:2]
par(mar = c(5.1, 5.1, 1, 2.1))
# Main plot
plot(NA,  xlim = range(position[,1]),
ylim = range(range(position[,2])),
xlab = xlab, ylab = ylab, xaxt = 'n',
yaxt = 'n', bty = "n", ann = FALSE)
win_dim = par("usr")
par(new = TRUE)
plot(NA, xlim = range(position[,1]), ylim = c(win_dim[3], win_dim[4] + 0.09*(win_dim[4] - win_dim[3])),
xlab = xlab, ylab = ylab, xaxt = 'n', yaxt = 'n', bty = "n")
win_dim = par("usr")
# Add grid
grid(NULL, NULL, lty = 1, col = "grey95")
# Add title
x_vec = c(win_dim[1], win_dim[2], win_dim[2], win_dim[1])
y_vec = c(win_dim[4], win_dim[4],
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]),
win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))
polygon(x_vec, y_vec, col = "grey95", border = NA)
text(x = mean(c(win_dim[1], win_dim[2])), y = (win_dim[4] - 0.09/2*(win_dim[4] - win_dim[3])), main)
# Add axes and box
lines(x_vec[1:2], rep((win_dim[4] - 0.09*(win_dim[4] - win_dim[3])),2), col = 1)
box()
axis(1, padj = 0.3)
y_axis = axis(2, labels = FALSE, tick = FALSE)
y_axis = y_axis[y_axis < (win_dim[4] - 0.09*(win_dim[4] - win_dim[3]))]
axis(2, padj = -0.2, at = y_axis)
# Add trajectory
lines(position, type = "l", col = color, pch = 16)
# Start and end points
points(c(0,position[steps+1,1]), c(0,position[steps+1,2]), cex = pt.cex, col = pt_col, pch = pt_pch)
# Legend
leg_pos = c(min(position[,1]), max(position[,2]))
legend(leg_pos[1], leg_pos[2], c("Start","End"),
col = pt_col, pch = pt_pch, pt.cex = pt.cex, bty = "n")
steps_steps
steps_steps[1,] = runif(1, -9, 9)
St = runif(150, 0, 2)
angle = runif(150, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps, 2, byrow=FALSE)
for (i in seq(1, steps)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
for (i in seq(1, steps+1)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps+1)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps+1)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps+1)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(150, 0, 2)
angle = runif(150, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
}
for (i in seq(1, steps)){
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
# Number of steps
steps = 150
# Initial matrix, made of "zeros"
steps_steps <- matrix(0, steps+1, 2)
#Number of bacteria
N = 1
# Setting position 1
steps_steps[1,] = runif(1, -9, 9)
St = runif(151, 0, 2)
angle = runif(151, 0, 2*pi)
cos_and_sin = c(cos(angle), sin(angle))
cos_sin = matrix(cos_and_sin, steps+1, 2, byrow=FALSE)
#Start for loop (need to start at 2 cause 1 is already set)
for (i in seq(1, steps+1)){
steps_steps[(i+1),1] = steps_steps[i,1]+St*cos_sin[i,1]
steps_steps[(i+1),2] = steps_steps[i,2]+St*cos_sin[i,2]
}
